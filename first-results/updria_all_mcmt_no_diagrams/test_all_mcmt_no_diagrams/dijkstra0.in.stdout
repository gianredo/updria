There are 5 initial predicates
no initial cex! Entering main loop
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 1
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 1
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 1
blocked
generalizing diagram...
Add new counter 2
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 2
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 2
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 2
blocked
generalizing diagram...
Add new counter 3
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
blocked
generalizing diagram...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
blocked
generalizing diagram...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
Add new counter 4
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
minimal model of size 2 for sort index
failed...
CEX! Violation of the initial formula
abstract cex
cex blocked in size {'index': 2}
extracting interpolants...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
blocked
generalizing diagram...
Add new counter 5
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
Add new counter 6
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
blocked
generalizing diagram...
Add new counter 7
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
minimal model of size 3 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
Add new counter 8
propagation phase...
Proved! Inductive invariant:
(`not` (`exists_index` 'index_0 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)))) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1)))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5)))))))
(`not` (`exists_index` 'index_0 (`and` (`not` (`=_int` (index2int 'index_0) -1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` p -1)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` p -1)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1))))) (`not` (`=_int` (index2int 'index_1) -1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))))
(`not` (`exists_index` 'index_0 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) -1)) (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))) (`=_int` (index2int 'index_1) -1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_1) -1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)))))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` p (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))) (`not` (`=_int` p (index2int 'index_1)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`and` (`not` (`=_int` p -1)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` p -1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)) (`not` (`=_int` p (index2int 'index_0)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 4) (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))) (`not` (`=_int` p (index2int 'index_1)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 1) (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 3))))))
(`not` (`exists_index` 'index_0 (`and` (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 7)))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 1) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))
Stats:
verification time: 1036.734
z3 check time: 438.267
generalization time: 479.984
recursive block time: 686.957
propagation time: 329.118
refinement time: 0.037
minimization models time: 107.494
num z3 calls: 395
number of added diagrams per frame: {0: 1, 1: 3, 2: 3, 3: 7, 4: 18, 5: 20, 6: 12, 7: 12}
greatest number of literals in a diagram per frame: {0: 12, 1: 49, 2: 49, 3: 30, 4: 30, 5: 30, 6: 30}
number of refinement steps: 1
number of initial predicates: 5
number of final predicates: 14
max concrete size: 0
number of predicates used in the inductive invariant: 14
