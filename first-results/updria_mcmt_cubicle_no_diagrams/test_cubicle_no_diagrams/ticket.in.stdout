There are 4 initial predicates
no initial cex! Entering main loop
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 1
blocked
generalizing diagram...
Add new counter 2
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 2
blocked
generalizing diagram...
Add new counter 3
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
blocked
generalizing diagram...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
Add new counter 4
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
minimal model of size 2 for sort index
failed...
CEX! Violation of the initial formula
abstract cex
cex blocked in size {'index': 2}
extracting interpolants...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
Add new counter 5
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
blocked
generalizing diagram...
Add new counter 6
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
blocked
generalizing diagram...
Add new counter 7
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
Add new counter 8
propagation phase...
Proved! Inductive invariant:
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`and` (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_1)) 0)) (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (Param['[Int]'][Bool] l (index2int 'index_1)))) (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_0)) 0))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (Param['[Int]'][Bool] l (index2int 'index_1))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`and` (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (Param['[Int]'][Bool] l (index2int 'index_1))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))) (`not` (`<=_int` 1 (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1))))))) (`not` (`<=_int` (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))) -1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` 1 (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1))))) (`and` (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_0)) 0)) (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` 1 (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1))))) (`and` (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))) (`and` (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_1)) 0)) (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_0)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))) -1) (`and` (Param['[Int]'][Bool] r (index2int 'index_0)) (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` 1 (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1))))) (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0)))))) (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0)))))) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (`not` (Param['[Int]'][Bool] r (index2int 'index_1)))))))))
(`not` (`exists_index` 'index_0 (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (Param['[Int]'][Bool] r (index2int 'index_0)))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (`<=_int` 1 (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (Param['[Int]'][Bool] l (index2int 'index_0)) (Param['[Int]'][Bool] l (index2int 'index_1))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))) (`and` (Param['[Int]'][Bool] l (index2int 'index_1)) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0))))) (`and` (Param['[Int]'][Bool] l (index2int 'index_1)) (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))) -1) (Param['[Int]'][Bool] l (index2int 'index_1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`<=_int` (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))) -1) (`and` (Param['[Int]'][Bool] l (index2int 'index_1)) (`not` (Param['[Int]'][Bool] r (index2int 'index_0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`<=_int` 1 (`+_int` (Param['[Int]'][Int] t (index2int 'index_0)) (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_1)))))) (`and` (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0)))))) (`and` (`and` (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_1)) 0)) (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_0)) 0))) (`not` (Param['[Int]'][Bool] l (index2int 'index_0)))))))))
(`not` (`exists_index` 'index_0 (`and` (`not` (`=_int` (Param['[Int]'][Int] t (index2int 'index_0)) 0)) (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`<=_int` 1 (`+_int` curr (`*_int` -1 (Param['[Int]'][Int] t (index2int 'index_0)))))) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] t (index2int 'index_1)) 0) (Param['[Int]'][Bool] l (index2int 'index_1))))))))
Stats:
verification time: 122.892
z3 check time: 51.097
generalization time: 59.466
recursive block time: 77.591
propagation time: 39.729
refinement time: 0.019
minimization models time: 9.781
num z3 calls: 158
number of added diagrams per frame: {0: 1, 1: 1, 2: 1, 3: 5, 4: 13, 5: 2, 6: 1, 7: 8}
greatest number of literals in a diagram per frame: {0: 11, 1: 21, 2: 21, 3: 21, 4: 21, 5: 21, 6: 21}
number of refinement steps: 1
number of initial predicates: 4
number of final predicates: 7
max concrete size: 0
number of predicates used in the inductive invariant: 10
