There are 5 initial predicates
no initial cex! Entering main loop
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 1
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 1
blocked
generalizing diagram...
Add new counter 2
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 2
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 2
blocked
generalizing diagram...
Add new counter 3
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
blocked
generalizing diagram...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
blocked
generalizing diagram...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
Add new counter 4
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
minimal model of size 2 for sort index
failed...
trying to block cex at frame 1
minimal model of size 2 for sort index
failed...
CEX! Violation of the initial formula
abstract cex
cex blocked in size {'index': 2}
extracting interpolants...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
Add new counter 5
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
Add new counter 6
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
minimal model of size 2 for sort index
failed...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 6
blocked
generalizing diagram...
Add new counter 7
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
minimal model of size 2 for sort index
failed...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 2 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
minimal model of size 2 for sort index
failed...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
minimal model of size 3 for sort index
failed...
trying to block cex at frame 3
minimal model of size 3 for sort index
failed...
trying to block cex at frame 2
minimal model of size 3 for sort index
failed...
trying to block cex at frame 1
blocked
generalizing diagram...
trying to block cex at frame 2
blocked
generalizing diagram...
trying to block cex at frame 3
blocked
generalizing diagram...
trying to block cex at frame 4
blocked
generalizing diagram...
trying to block cex at frame 5
blocked
generalizing diagram...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 7
blocked
generalizing diagram...
Add new counter 8
propagation phase...
Checking intersection between last frame and property...
found a cti
minimal model of size 2 for sort index
extracting diagram...
add cti
trying to block cex at frame 8
minimal model of size 2 for sort index
failed...
trying to block cex at frame 7
minimal model of size 2 for sort index
failed...
trying to block cex at frame 6
blocked
generalizing diagram...
trying to block cex at frame 7
blocked
generalizing diagram...
trying to block cex at frame 8
blocked
generalizing diagram...
Add new counter 9
propagation phase...
Proved! Inductive invariant:
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1)))) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5)))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0))))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (`=_int` (index2int 'index_0) (index2int 'index_1)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (Param['[Int]'][Bool] p (index2int 'index_0))))))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`and` (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)) (`not` (Param['[Int]'][Bool] p (index2int 'index_0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1)) (`not` (Param['[Int]'][Bool] p (index2int 'index_1))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1)) (`not` (Param['[Int]'][Bool] p (index2int 'index_1)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 4)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`not` (`=_int` (index2int 'index_0) (index2int 'index_1))) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6)))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1)) (`not` (Param['[Int]'][Bool] p (index2int 'index_0))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 4) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (Param['[Int]'][Bool] p (index2int 'index_1))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (Param['[Int]'][Bool] p (index2int 'index_1))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 6) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`and` (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1)) (`not` (Param['[Int]'][Bool] p (index2int 'index_0)))))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 3) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (Param['[Int]'][Bool] p (index2int 'index_1))))))))
(`not` (`exists_index` 'index_0 (Param['[Int]'][Bool] p (index2int 'index_0))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`not` (Param['[Int]'][Bool] p (index2int 'index_0))))))))))
(`not` (`exists_index` 'index_0 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0)) (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 4)))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 3) (Param['[Int]'][Bool] p (index2int 'index_1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`exists_index` 'index_2 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_2)) 3) (`and` (`not` (`=_int` (index2int 'index_1) (index2int 'index_2))) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 0)) (Param['[Int]'][Bool] p (index2int 'index_1)))))))))))
(`not` (`exists_index` 'index_0 (`and` (`and` (`=_int` (Param['[Int]'][Int] f (index2int 'index_0)) 0) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 1))) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 7)))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 4) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1))))))))
(`not` (`exists_index` 'index_0 (`exists_index` 'index_1 (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_0)) 5) (`and` (`not` (`=_int` (Param['[Int]'][Int] f (index2int 'index_1)) 2)) (`and` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 6) (`not` (`=_int` (Param['[Int]'][Int] a (index2int 'index_1)) 1))))))))
Stats:
verification time: 596.618
z3 check time: 294.795
generalization time: 238.394
recursive block time: 345.526
propagation time: 241.801
refinement time: 0.036
minimization models time: 55.043
num z3 calls: 360
number of added diagrams per frame: {0: 1, 1: 2, 2: 2, 3: 8, 4: 5, 5: 7, 6: 17, 7: 19, 8: 3}
greatest number of literals in a diagram per frame: {0: 42, 1: 42, 2: 42, 3: 25, 4: 25, 5: 25, 6: 25, 7: 25}
number of refinement steps: 1
number of initial predicates: 5
number of final predicates: 11
max concrete size: 0
number of predicates used in the inductive invariant: 11
