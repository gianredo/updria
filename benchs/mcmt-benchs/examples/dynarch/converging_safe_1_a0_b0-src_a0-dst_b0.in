:comment Input model:
:comment | system implementation sys.impl
:comment |     parameters
:comment |         A0: set of indices;
:comment |         B0: set of indices;
:comment |         C: set of indices;
:comment | 
:comment |     subcomponents
:comment |         a0: set indexed by A0;
:comment |         b0: set indexed by B0;
:comment |         c: set indexed by C;
:comment | 
:comment |     connections
:comment |         a0[x] -> c[y] for x in A0, y in C;
:comment |         b0[x] -> c[y] for x in B0, y in C;
:comment | 
:comment | 
:comment | 
:comment |     reconfigurations
:comment |         exists(x not in A0, next(A0) = add(A0, x));
:comment | 
:comment |         exists(x in A0, next(A0) = remove(A0, x));
:comment | 
:comment |         exists(x not in B0, next(B0) = add(B0, x));
:comment | 
:comment |         exists(x in B0, next(B0) = remove(B0, x));
:comment | 
:comment |         exists(x not in C, next(C) = add(C, x));
:comment |         exists(x in C, next(C) = remove(C, x));
:comment | end sys.impl;

:comment Source components: a0
:comment Destination components: b0

:index int
:max_transitions_number 1000

:local _A0 bool
:local _B0 bool
:local _C bool
:local _a0_token bool
:local _b0_token bool
:local _c_token bool

:initial
:var x
:var y
:cnj (= _a0_token[x] true) (= _b0_token[x] false) (= _c_token[x] false)

:unsafe
:var x
:cnj (= _b0_token[x] true)

:comment transition t1
:comment connection 1, case 4a, first transition
:transition
:var x
:var j
:guard true true true true (= _A0[x] true) (= _a0_token[x] true) (= _C[x] true)
:numcases 2
:case (= j x)
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val true
:case (not (= j x))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val _c_token[j]

:comment transition t2
:comment connection 1, case 4a, second transition
:transition
:var x
:var y
:var j
:guard true true true true (= _A0[x] true) (= _a0_token[x] true) (= _C[y] true)
:numcases 3
:case (= j x)
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val _c_token[j]
:case (not (= j x)) (= j y)
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val true
:case (not (= j x)) (not (= j y))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val _c_token[j]

:comment transition t3
:comment connection 2, case 4a, first transition
:transition
:var x
:var j
:guard true true true true (= _B0[x] true) (= _b0_token[x] true) (= _C[x] true)
:numcases 2
:case (= j x)
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val true
:case (not (= j x))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val _c_token[j]

:comment transition t4
:comment connection 2, case 4a, second transition
:transition
:var x
:var y
:var j
:guard true true true true (= _B0[x] true) (= _b0_token[x] true) (= _C[y] true)
:numcases 3
:case (= j x)
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val _c_token[j]
:case (not (= j x)) (= j y)
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val true
:case (not (= j x)) (not (= j y))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val _a0_token[j]
:val _b0_token[j]
:val _c_token[j]

:comment transition t5
:comment reconfiguration 1, case 2, transition 1 of 1, x -> x
:transition
:var j
:var x
:guard true (= _A0[x] false) (= _A0[x] false)
:numcases 2
:case (= x j)
:val true
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)
:case (not (= x j))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)

:comment transition t6
:comment reconfiguration 2, case 2, transition 1 of 1, x -> x
:transition
:var j
:var x
:guard true (= _A0[x] true) (= _A0[x] true)
:numcases 2
:case (= x j)
:val false
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)
:case (not (= x j))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)

:comment transition t7
:comment reconfiguration 3, case 2, transition 1 of 1, x -> x
:transition
:var j
:var x
:guard true (= _B0[x] false) (= _B0[x] false)
:numcases 2
:case (= x j)
:val _A0[j]
:val true
:val _C[j]
:val true
:val false
:val (and _c_token[j] true)
:case (not (= x j))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)

:comment transition t8
:comment reconfiguration 4, case 2, transition 1 of 1, x -> x
:transition
:var j
:var x
:guard true (= _B0[x] true) (= _B0[x] true)
:numcases 2
:case (= x j)
:val _A0[j]
:val false
:val _C[j]
:val true
:val false
:val (and _c_token[j] true)
:case (not (= x j))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)

:comment transition t9
:comment reconfiguration 5, case 2, transition 1 of 1, x -> x
:transition
:var j
:var x
:guard true (= _C[x] false) (= _C[x] false)
:numcases 2
:case (= x j)
:val _A0[j]
:val _B0[j]
:val true
:val true
:val (and _b0_token[j] true)
:val false
:case (not (= x j))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)

:comment transition t10
:comment reconfiguration 6, case 2, transition 1 of 1, x -> x
:transition
:var j
:var x
:guard true (= _C[x] true) (= _C[x] true)
:numcases 2
:case (= x j)
:val _A0[j]
:val _B0[j]
:val false
:val true
:val (and _b0_token[j] true)
:val false
:case (not (= x j))
:val _A0[j]
:val _B0[j]
:val _C[j]
:val true
:val (and _b0_token[j] true)
:val (and _c_token[j] true)
